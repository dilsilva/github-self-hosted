name: do-the-job
on: push
jobs:
  do-the-job:
    name: Do the job on the runner
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Hello World
        run: |
          echo 'Hello World!'
          sleep 15
          echo 'Goodbye!'
# name: Deploy to ECR

# on:
 
#   push:
#     branches: [ master ]

# env:
#   ECR_REPOSITORY: flask-app
#   EKS_CLUSTER_NAME: Kubernetes-demo 
#   AWS_REGION: us-east-1

# jobs:
  
#   build:
    
#     name: Deployment
#     runs-on: self-hosted

#     steps:

#     - name: Set short git commit SHA
#       id: commit
#       uses: prompt/actions-commit-hash@v2

#   # Checkout and test app code
#     - name: Check out code
#       uses: actions/checkout@v2

#       with: dilsilva/go-load-generator
#     - name: Setup Go
#       uses: actions/setup-go@v5
#       with:
#         go-version: '1.23.x'
#     - name: Install dependencies
#       run: go get ./cmd/loadgen/
#     - name: Test with the Go CLI
#       run: go test -v -cover ./...
    
    
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{env.AWS_REGION}}

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1

#     - name: Build, tag, and push image to Amazon ECR
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
#         IMAGE_TAG: ${{ steps.commit.outputs.short }}
#       run: |
#         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
#         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#     #Insert vlnerability scan after build

#     - name: Update kube config
#       run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

#     #Insert Sign Image verification step before deployment

#     - name: Deploy to EKS
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
#         IMAGE_TAG: ${{ steps.commit.outputs.short }}
#       run: |
#         sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
#         kubectl apply -f manifests/hello-app-deployment.yaml
#         kubectl apply -f manifests/hello-app-service.yaml
####
# name: do-the-job
# on: push
# jobs:
#   start-runner:
#     name: Start self-hosted EC2 runner
#     runs-on: ubuntu-latest
#     outputs:
#       label: ${{ steps.start-ec2-runner.outputs.label }}
#       ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#       - name: Start EC2 runner
#         id: start-ec2-runner
#         uses: machulav/ec2-github-runner@v2
#         with:
#           mode: start
#           github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#           ec2-image-id: ami-0e9085e60087ce171
#           ec2-instance-type: t3.nano
#           subnet-id: subnet-0a63815aa47fb2deb
#           security-group-id: sg-0633be23a5467c59c
#           iam-role-name: runner_instance_profile # optional, requires additional permissions
#           aws-resource-tags: > # optional, requires additional permissions
#             [
#               {"Key": "Name", "Value": "ec2-github-runner"},
#               {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
#             ]
#   do-the-job:
#     name: Do the job on the runner
#     needs: start-runner # required to start the main job when the runner is ready
#     runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
#     steps:
#       - name: Hello World
#         run: echo 'Hello World!'
#   stop-runner:
#     name: Stop self-hosted EC2 runner
#     needs:
#       - start-runner # required to get output from the start-runner job
#       - do-the-job # required to wait when the main job is done
#     runs-on: ubuntu-latest
#     if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
#       - name: Stop EC2 runner
#         uses: machulav/ec2-github-runner@v2
#         with:
#           mode: stop
#           github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
#           label: ${{ needs.start-runner.outputs.label }}
#           ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}