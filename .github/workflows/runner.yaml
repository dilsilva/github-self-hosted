name: Deploy to ECR

on: push
env:
  AWS_ACCOUNT: 061051224299
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 061051224299.dkr.ecr.eu-west-1.amazonaws.com
  ECR_REPOSITORY: go-app

jobs:
  build:
    name: CI
    runs-on: self-hosted
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Build and tag image
        id: build-image
        env:
          TAG_COMMIT: ${{ github.sha }}
        run: |
          cd app/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_COMMIT . 
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$TAG_COMMIT" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ steps.build-image.outputs.image }}
          format: 'table'
          hide-progress: true
          # exit-code: '1' #Error in case of vulnerabilities
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH' #Ignore low severity vulnerabilities 

      - name: Login to ECR
        id: login-ecr
        env:
          AWS_ACCOUNT: 061051224299
          AWS_REGION: eu-west-1
        run: |
            # Get the ECR login password and use it to log in to the ECR registry
            aws ecr get-login-password \
                    --region $AWS_REGION | docker login \
                    --username AWS \
                    --password-stdin $ECR_REGISTRY

      - name: Push image
        id: push-image
        env:
          TAG_COMMIT: ${{ github.sha }}
        run: |
          docker push ${{ steps.build-image.outputs.image }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_COMMIT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition web --query taskDefinition > task-definition.json
          cat task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nginx
          image: nginx/nginx

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: cicdsvc 
          cluster: cicdtest
          wait-for-service-stability: true
